#!/bin/bash
#
# Build an open-iscsi source rpm 
#

RPM="open-iscsi"
BRANCH="sles11-sp3"
VERSION="2.0-873"
BRANCH_TAG="sles11-sp2-update"
PATCH2_END_TAG="sles11-sp2-update2"
PATCH3_END_TAG="sles11-sp3-update-iscsiuio"
PATCH4_END_TAG="sles11-sp3-update-flash"
DESTDIR=
uncommitted_changes=0

# if using osc ...
OBS_BRANCH=home:hreinecke:branches
OBS_PRJ=SUSE:SLE-11-SP2:GA
OSC="osc -A https://api.suse.de"
TMPDIR=


while [ $# -gt 0 ] ; do
    case "$1" in
	-c|--clean)
	    remove_destdir=1;
	    shift;
	    ;;
        -d)
            DESTDIR=$2;
            shift 2;
            ;;
        --destdir)
            DESTDIR=${$1#*=};
            shift;
            ;;
        -b)
            BRANCH=$2;
            shift 2;
            ;;
        --branch=)
            BRANCH=${1##*=};
            shift;
            ;;
	-o|--use-osc)
	    use_osc=1;
	    shift;
	    ;;
        -f|--force)
            force=1;
	    update=;
            shift;
            ;;
	-m|--maintenance)
	    OBS_PRJ=SUSE:SLE-11-SP2:GA
	    OSC="osc -A https://api.suse.de"
	    shift;
	    ;;
        -u|--update)
            update=1;
	    force=;
            shift;
            ;;
        --uncommitted-changes)
            uncommitted_changes=1
            shift;
            ;;
        *)
            echo "Usage: build_rpm [-c|-f|-o|-u] [-d dir|--destdir=DIR] " \
                 "[-b BRANCH|--branch=BRANCH] [--uncommitted-changes]"
            exit 1;
            ;;
    esac
done

RELEASE=$(sed -n 's/.* iscsi_release *\(.*\)/\1/p' rpm/$RPM.spec)

if ! which git > /dev/null ; then
    echo "git not found, cannot continue"
    exit 1
fi

if [ -d "$DESTDIR" ] ; then
    if [ -z "$force" ] && [ -z "$update" ] ; then
        echo "directory $DESTDIR exists, cannot continue"
        exit 1
    elif [ -z "$update" ] ; then
        if ! rm -rf "$DESTDIR" ; then
            echo "Cannot remove directory $DESTDIR"
            exit 1
        fi
    fi
else
    DESTDIR=$(mktemp -d --tmpdir $RPM-XXXXXXXX)
    if [ ! -d "$DESTDIR" ] ; then
	echo "Cannot create directory $DESTDIR"
	exit 1
    fi
fi

if [ -n "$use_osc" ] ; then
    pushd $DESTDIR
    if ! $OSC meta pkg $OBS_BRANCH:$OBS_PRJ $RPM > /dev/null 2>&1 ; then
	$OSC branch -m "Update with latest fixes" $OBS_PRJ $RPM
    fi
    $OSC co --current-dir $OBS_BRANCH:$OBS_PRJ $RPM
    TMPDIR=${DESTDIR}
    DESTDIR="${DESTDIR}/$RPM"
    popd
fi

#
# to be able to convert this git archive into the proper format
# for package building, we want a spec file, a changes file,
# a base tar file, and zero or more patch files
#

# create the spec and changes files -- Note that this
# gets the HEAD of these files from the specified branch,
# not from the current workspace
git show $BRANCH:rpm/$RPM.spec > $DESTDIR/$RPM.spec
git show $BRANCH:rpm/$RPM.changes > $DESTDIR/$RPM.changes

# create the base tar file containing the open-iscsi base code
git archive --format=tar --prefix=$RPM-$VERSION/ "$VERSION" \
    | bzip2 > $DESTDIR/$RPM-$VERSION.tar.bz2

# patch1: create a diff file for changes between the base version
# and the update tag
git diff $VERSION..$BRANCH_TAG | bzip2 > $DESTDIR/$RPM-sles11-sp2-update.diff.bz2

# patch2: create a diff for everything since the update tag
git diff $BRANCH_TAG..$PATCH2_END_TAG | \
	bzip2 > $DESTDIR/$RPM-sles11-sp2-latest.diff.bz2

# patch3: some iscsiuio changes for SP3
git diff $PATCH2_END_TAG..$PATCH3_END_TAG | \
	bzip2 > $DESTDIR/$RPM-sles11-sp3-iscsiuio-update.diff.bz2

# patch4: some iscsiuio changes for flash support
git diff $PATCH3_END_TAG..$PATCH4_END_TAG | \
	bzip2 > $DESTDIR/$RPM-sles11-sp3-flash-update.diff.bz2

# if the user specified this then get all changes not even checked in
# and patch them into the spec file as "Patch5" (fragile)
if (( $uncommitted_changes )) ; then
    echo "WARNING: Including uncommitted changes for testing." >&2
    echo "         Don't submit the package to Autobuild!"     >&2

    patchname=$RPM-$(date -u +%Y-%M-%d_%T_%Z).diff
    git diff $BRANCH > $DESTDIR/$patchname

    # XXX this assumes the highest existing patch is 4 -- should be cleaned up
    sed -i "/Patch4:.*$/aPatch5:         $patchname" $DESTDIR/$RPM.spec
    sed -i "/%patch4 -p1/a%patch5 -p1" $DESTDIR/$RPM.spec
fi

echo "$RPM src rpm copied to $DESTDIR"

if [ -n "$use_osc" ] ; then
    pushd $DESTDIR
    osc ar
    osc ci --message="Checked in from git branch $OBS_BRANCH"
    osc sr
    popd
fi

if [ -n "$remove_destdir" ] ; then
    rm -rf $DESTDIR
    if [ "$TMPDIR" ] ; then
	rm -rf $TMPDIR
    fi
fi
