#!/bin/bash
#
# /etc/init.d/iscsi
#
### BEGIN INIT INFO
# Provides:          iscsi
# Required-Start:    $network
# Should-Start:      iscsitarget multipathd
# Required-Stop:     $network
# Should-Stop:       multipathd
# Default-Start:     3 5
# Default-Stop:      
# Short-Description: iSCSI initiator daemon
# Description:       The iSCSI initator is used to create and
#                    manage iSCSI connections to a iSCSI Target.
### END INIT INFO

CONFIG_FILE=/etc/iscsi/iscsid.conf
DAEMON=/sbin/iscsid
ISCSIADM=/sbin/iscsiadm
ISCSIUIO=/sbin/iscsiuio
ARGS="-c $CONFIG_FILE -n"

# Source LSB init functions
. /etc/rc.status

# Reset status of this service
rc_reset

iscsi_login_all_nodes()
{
	echo -n "Setting up iSCSI targets: "
	$ISCSIADM -m node --loginall=automatic 2> /dev/null
	if [ $? == 21 ] ; then
	    rc_failed 6
	fi
	rc_status -v
}

#
# Try to load all required modules prior to startup
#
iscsi_load_transport_modules()
{
    loaded=$(sed -n "/^iscsi_tcp/p" /proc/modules)
    if [ -z "$loaded" ] ; then
	modprobe iscsi_tcp
	if [ $? = 0 ] ; then
	    echo -n " tcp"
	fi
    fi

    for iface in /etc/iscsi/ifaces/*; do
	[ -f "$iface" ] || continue
	[ "$iface" = "/etc/iscsi/ifaces/iface.example" ] && continue
	# Check if the iface has been configured
	result=$(sed '/#.*/D;/^$/D;/iface.iscsi_ifacename/D;/iface.hwaddress/D;/iface.transport_name/D' $iface)
	if [ "$result" ] ; then
	    mod=$(sed -n 's/^iface.transport_name *= *\(.*\)/\1/p' $iface)
	    [ "$mod" = "iscsi_tcp" -o "$mod" = "tcp" ] && continue
	    loaded=$(sed -n "/^$mod/p" /proc/modules)
	    if [ -z "$loaded" ] ; then
		modprobe $mod
		if [ $? = 0 ] ; then
		    echo -n " $mod"
		fi
	    fi
	fi
    done
}

iscsi_list_all_nodes()
{
    # Check for active sessions
    if ! $ISCSIADM -m session > /dev/null 2>&1; then
	echo "No active connections."
	return 0
    fi
    echo "Active connections:"
    $ISCSIADM -m session | while read proto num PORTAL TARGET ; do
	PORTAL=${PORTAL%,*}
	echo -e "\t$TARGET at $PORTAL"
    done
}

case "$1" in
    start)
	echo -n "Loading iscsi modules: "
	iscsi_load_transport_modules
	rc_status -v
	if checkproc $DAEMON ; then
	    RETVAL=0
	else
	    echo -n "Starting iSCSI initiator service: "
	    if grep -q bnx2i /proc/modules && [ -x $ISCSIUIO ] ; then
		startproc $ISCSIUIO
	    fi
	    startproc $DAEMON $ARGS
	    RETVAL=$?
	    rc_status -v
	fi
	if [ "$RETVAL" == "0" ]; then
	    iscsi_login_all_nodes
	fi
	;;
    stop)
	echo -n "Stopping iSCSI initiator service: "
	# to kill iscsid discovery children
	pids=$(/bin/ps --no-heading -fC iscsid | /usr/bin/awk '{if ($3!=1) print $2}')
	for pid in $pids; do kill -KILL $pid; done
	$ISCSIADM -m session -u >/dev/null 2>&1
	killproc -KILL $DAEMON
	RETVAL=$?
	if grep -q bnx2i /proc/modules && [ -x $ISCSIUIO ]; then
	    killproc -KILL $ISCSIUIO
	fi
	RETVAL=$?
	rc_failed $RETVAL
	rc_status -v
	;;
    status)
	echo -n "Checking for iSCSI initiator service: "
	if checkproc $DAEMON ; then
	    rc_status -v
	    iscsi_list_all_nodes
	else
	    rc_failed 3
	    rc_status -v
	fi
	;;
    restart|reload)
	$0 stop
	RETVAL=$?
	if [ "$RETVAL" != "0" ]; then
		echo "Stopping iSCSI initiator service failed, not starting"
		exit $RETVAL
	fi
	sleep 1
	$0 start
	;;
    *)
	echo "Usage: $0 {start|stop|status|restart|reload}"
	exit 1
	;;
esac
rc_exit

