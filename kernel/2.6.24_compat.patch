diff --git a/iscsi_tcp.c b/iscsi_tcp.c
index 0d21d87..ed5cdfa 100644
--- a/iscsi_tcp.c
+++ b/iscsi_tcp.c
@@ -26,6 +26,7 @@
  *	Zhenyu Wang
  */
 
+#include <linux/version.h>
 #include <linux/types.h>
 #include <linux/list.h>
 #include <linux/inet.h>
@@ -1936,6 +1937,9 @@ static struct scsi_host_template iscsi_sht = {
 	.eh_device_reset_handler= iscsi_eh_device_reset,
 	.eh_host_reset_handler	= iscsi_eh_host_reset,
 	.use_clustering         = DISABLE_CLUSTERING,
+#if LINUX_VERSION_CODE == KERNEL_VERSION(2,6,24)
+	.use_sg_chaining	= ENABLE_SG_CHAINING,
+#endif
 	.slave_configure        = iscsi_tcp_slave_configure,
 	.proc_name		= "iscsi_tcp",
 	.this_id		= -1,
diff --git a/scsi_transport_iscsi.c b/scsi_transport_iscsi.c
index e8f8cf1..7c19201 100644
--- a/scsi_transport_iscsi.c
+++ b/scsi_transport_iscsi.c
@@ -1738,7 +1738,7 @@ static __init int iscsi_transport_init(void)
 	return 0;
 
 release_nls:
-	netlink_kernel_release(nls);
+	sock_release(nls->sk_socket);
 unregister_session_class:
 	transport_class_unregister(&iscsi_session_class);
 unregister_conn_class:
@@ -1753,7 +1753,7 @@ unregister_transport_class:
 static void __exit iscsi_transport_exit(void)
 {
 	destroy_workqueue(iscsi_eh_timer_workq);
-	netlink_kernel_release(nls);
+	sock_release(nls->sk_socket);
 	transport_class_unregister(&iscsi_connection_class);
 	transport_class_unregister(&iscsi_session_class);
 	transport_class_unregister(&iscsi_host_class);
